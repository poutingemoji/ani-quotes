{"version":3,"sources":["images/logo.png","components/Navbar.js","utils/Helper.js","components/Hero.js","images/topics/death.png","images/topics/love.png","images/topics/motivational.png","images/topics/future.png","images/topics/life.png","images/topics/leadership.png","data/topics.js","images/topics/patience.png","components/Card.js","components/Gallery.js","components/Loading.js","pages/index.js","pages/topics.js","pages/authors.js","pages/quote_of_the_day.js","pages/quotes.js","components/Footer.js","components/Dropdown.js","data/authorIds.js","images/quotes/dragon-and-tiger.png","App.js","reportWebVitals.js","index.js"],"names":["Navbar","toggle","className","role","to","src","logo","onClick","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","randomChoice","arr","min","max","length","Math","ceil","floor","random","groupBy","fn","reduce","result","item","Array","isArray","map","key","push","Hero","quotes","useState","quote","setQuote","text","topics","Death","icon","image","death","hex","Motivational","motivational","Love","love","Patience","Future","future","Life","life","Leadership","leadership","Card","author","tags","style","background","backgroundPosition","backgroundSize","name","tag","backgroundColor","Gallery","Loading","Home","isLoading","Topics","Object","keys","snakeCase","backgroundImage","Authors","authors","sort","i","content","QuoteOfTheDay","Date","date","setDate","useEffect","interval","setInterval","calculateSecondsUntilEndOfDate","clearInterval","console","log","months","getMonth","getDate","nth","getHours","getMinutes","getSeconds","Quotes","useParams","topic","filter","includes","capitalCase","Footer","Dropdown","isOpen","authorIds","496","2754","12064","12295","12305","55131","55133","67065","options","method","headers","Accept","body","JSON","stringify","query","variables","id_in","App","setIsLoading","setIsOpen","setQuotes","fetch","then","res","json","newQuotes","entries","forEach","id","charQuotes","character","data","Page","characters","find","parseInt","newQuote","assign","large","full","hideMenu","window","innerWidth","addEventListener","removeEventListener","basename","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65a8daf9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.cdc91b7f.png\";","import { Link } from \"react-router-dom\";\r\nimport logo from \"../images/logo.png\";\r\n\r\nconst Navbar = ({ toggle }) => {\r\n  return (\r\n    <nav\r\n      className=\"fixed flex items-center justify-between w-full h-16 text-gray-900 shadow-sm md:justify-evenly bg-foreground \"\r\n      role=\"navigation\"\r\n    >\r\n      <Link to=\"/\" className=\"pl-8\">\r\n        <img className=\"h-12\"src={logo}/>\r\n      </Link>\r\n      <div className=\"px-4 cursor-pointer md:hidden\" onClick={toggle}>\r\n        <svg\r\n          className=\"w-8 h-8\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          viewBox=\"0 0 24 24\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth=\"2\"\r\n            d=\"M4 6h16M4 12h16M4 18h16\"\r\n          />\r\n        </svg>\r\n      </div>\r\n      <div className=\"hidden pr-8 font-semibold md:block\">\r\n        <Link to=\"/\" className=\"p-4 hover:text-white\">\r\n          Home\r\n        </Link>\r\n        <Link to=\"/authors\" className=\"p-4 hover:text-white\">\r\n          Authors\r\n        </Link>\r\n        <Link to=\"/topics\" className=\"p-4 hover:text-white\">\r\n          Topics\r\n        </Link>\r\n        <Link to=\"/quote_of_the_day\" className=\"p-4 hover:text-white\">\r\n          Quote Of The Day\r\n        </Link>\r\n      </div>\r\n      <div className=\"hidden md:block\"></div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export function randomBetween(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\nexport function randomChoice(arr) {\r\n  return arr[randomBetween(0, arr.length - 1)];\r\n}\r\n\r\nexport function groupBy(arr, fn) {\r\n  return arr.reduce((result, item) => {\r\n    const keys = Array.isArray(fn(item)) ? fn(item) : [fn(item)];\r\n    keys.map((key) => {\r\n      if (!result[key]) result[key] = [];\r\n      result[key].push(item);\r\n    });\r\n    return result;\r\n  }, {});\r\n}\r\n","import { useState } from \"react\";\r\nimport { randomChoice } from \"../utils/Helper\";\r\n\r\nfunction Hero({ quotes }) {\r\n  const [quote, setQuote] = useState(randomChoice(quotes));\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-col items-center justify-center h-screen bg-background\">\r\n        <h1 className=\"mt-32 mb-2 text-4xl font-bold text-center text-white lg:text-7xl md:text-5xl sm:text-4xl\">\r\n          <span className=\"text-white\">Ani</span>\r\n          <span className=\"text-blue\">Quotes</span>\r\n        </h1>\r\n\r\n        <button\r\n          className=\"flex items-center px-3 py-2 my-4 text-lg text-white rounded-md bg-green lg:text-xl md:text-xl sm:text-xl bg-french-blue hover:bg-star-command-blue\"\r\n          onClick={() => setQuote(randomChoice(quotes))}\r\n        >\r\n          Randomize the Quote <i className=\"ml-2.5 fas fa-random\"></i>\r\n        </button>\r\n\r\n        <span className=\"w-3/6 text-lg\">\"{quote.text}\"</span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Hero;\r\n","export default __webpack_public_path__ + \"static/media/death.6766dd21.png\";","export default __webpack_public_path__ + \"static/media/love.692a75f3.png\";","export default __webpack_public_path__ + \"static/media/motivational.080c72a4.png\";","export default __webpack_public_path__ + \"static/media/future.cc3c9bcd.png\";","export default __webpack_public_path__ + \"static/media/life.ac21f935.png\";","export default __webpack_public_path__ + \"static/media/leadership.ebae3a84.png\";","import death from \"../images/topics/death.png\";\r\nimport love from \"../images/topics/love.png\";\r\nimport motivational from \"../images/topics/motivational.png\";\r\nimport future from \"../images/topics/future.png\"\r\nimport life from \"../images/topics/life.png\"\r\nimport leadership from \"../images/topics/leadership.png\"\r\nimport patience from \"../images/topics/patience.png\"\r\nconst topics = {\r\n  Death: { icon: \"skull-crossbones\", image: death, hex: \"#505A5B\" },\r\n  Motivational: { icon: \"fire\", image: motivational, hex: \"#EEA243\" },\r\n  Love: { icon: \"heart\", image: love, hex: \"#BD4F6C\" },\r\n  Patience: { icon: \"hourglass\", image: patience, hex: \"#7D8CC4\" },\r\n  Future: { icon: \"clock\", image: future, hex: \"#5899E2\" },\r\n  Life: { icon: \"seedling\", image: life, hex: \"#7B904B\" },\r\n  Leadership: { icon: \"bullhorn\", image: leadership, hex: \"#D64045\" },\r\n};\r\n\r\nexport default topics;\r\n","export default __webpack_public_path__ + \"static/media/patience.0ac070e8.png\";","import topics from \"../data/topics\"\r\n\r\nfunction Card({ author, text, image, tags }) {\r\n  return (\r\n    <div className=\"flex flex-col p-3 break-inside\">\r\n      <div className=\"flex flex-col flex-1 overflow-hidden rounded-lg shadow-lg bg-foreground\">\r\n        {image && (\r\n          <div\r\n            className=\"bg-cover h-96\"\r\n            style={{\r\n              background: `url(${image}) no-repeat center center`,\r\n              backgroundPosition: \"center\",\r\n              backgroundSize: \"cover\",\r\n            }}\r\n          ></div>\r\n        )}\r\n        <div className=\"flex flex-col flex-1 p-4\">\r\n          <div className=\"flex-1 mb-2 text-xl text-gray-900\">\r\n            <p>\"{text}\"</p>\r\n          </div>\r\n          <div className=\"flex\">\r\n            <img\r\n              className=\"object-cover w-8 h-8 mr-2 rounded-full\"\r\n              src={author.image}\r\n            />\r\n            <h3 className=\"mb-2 text-xl font-bold text-gray-900\">\r\n              {author.name}\r\n            </h3>\r\n          </div>\r\n          <div className=\"flex flex-wrap mt-1\">\r\n            {tags && tags.map((tag) => (\r\n              <span className=\"px-2 m-1 text-white rounded-full\" style={{ backgroundColor: topics[tag]?.hex || \"\"}}>{tag}</span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import Card from \"./Card\";\r\n\r\nfunction Gallery({ quotes }) {\r\n  return (\r\n    <div className=\"mx-5 masonry before:box-inherit after:box-inherit\">\r\n      {quotes.map((quote) => (\r\n        <Card\r\n          image={quote.image}\r\n          text={quote.text}\r\n          author={quote.author}\r\n          tags={quote.topics}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nexport default Gallery;\r\n","function Loading() {\r\n  return <div>Loading...</div>\r\n}\r\n\r\nexport default Loading","import Hero from \"../components/Hero\";\r\nimport Gallery from \"../components/Gallery\";\r\nimport Loading from \"../components/Loading\"\r\n\r\nconst Home = ({ quotes, isLoading }) => {\r\n  if (isLoading) return <Loading />;\r\n  return (\r\n    <>\r\n      <Hero quotes={quotes} />\r\n      <Gallery quotes={quotes} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { snakeCase } from \"change-case\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"../components/Loading\";\r\nimport { groupBy } from \"../utils/Helper\";\r\nimport topics from \"../data/topics\"\r\n\r\nconst Topics = ({ quotes, isLoading }) => {\r\n  if (isLoading) return <Loading />;\r\n  const topicsA = groupBy(quotes, (quote) => quote.topics);\r\n  return (\r\n    <>\r\n      <div className=\"pt-20 mx-32 text-center\">\r\n        <h1 className=\"text-5xl font-black uppercase\">Topics</h1>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-2 gap-4 m-4 md:grid-cols-3 md:gap-6 md:m-6 lg:grid-cols-4 2xl:grid-cols-5 bg-background\">\r\n        {Object.keys(topics).map((key) => (\r\n          <Link to={`/topics/${snakeCase(key)}`}>\r\n            <button\r\n              className=\"flex flex-col items-center justify-center w-full h-full p-20 text-white rounded-lg hover:underline\"\r\n              style={{\r\n                backgroundImage: `linear-gradient(rgba(11, 22, 34, 0.5), rgba(11,22,34,0.5)), url(${topics[key].image})`,\r\n                backgroundSize: \"cover\",\r\n              }}\r\n            >\r\n              <i className={` fas fa-${topics[key].icon} fa-5x`}> </i>\r\n              <p className=\"text-2xl\">{key}</p>\r\n            </button>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Topics;\r\n","import Tippy from \"@tippyjs/react\";\r\nimport { snakeCase } from \"change-case\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"tippy.js/dist/tippy.css\";\r\nimport Loading from \"../components/Loading\";\r\nimport { groupBy } from \"../utils/Helper\";\r\n\r\nconst Authors = ({ quotes, isLoading }) => {\r\n  if (isLoading) return <Loading />;\r\n  const authors = groupBy(quotes, (quote) => quote.author.name);\r\n  return (\r\n    <>\r\n      <div className=\"pt-20 mx-32 text-center\">\r\n        <h1 className=\"text-5xl font-black uppercase\">Authors</h1>\r\n      </div>\r\n\r\n      <div className=\"flex flex-row flex-wrap justify-center\">\r\n        {Object.keys(authors)\r\n          .sort()\r\n          .map((key, i) => {\r\n            const author = authors[key][0].author;\r\n            return (\r\n              <Tippy content={author.name}>\r\n                <Link to={`/authors/${snakeCase(key)}`}>\r\n                  <button key={i} className=\"p-4\">\r\n                    <img className=\"w-64 rounded-lg h-96\" src={author.image} />\r\n                  </button>\r\n                </Link>\r\n              </Tippy>\r\n            );\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Authors;\r\n","import { useEffect, useState } from \"react\";\r\nimport Card from \"../components/Card\";\r\nimport Loading from \"../components/Loading\";\r\nimport { randomChoice } from \"../utils/Helper\";\r\n\r\nfunction QuoteOfTheDay({ quotes, isLoading }) {\r\n  const [date, setDate] = useState(new Date());\r\n  const [quote, setQuote] = useState(randomChoice(quotes));\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setDate(new Date());\r\n      setQuote(randomChoice(quotes));\r\n    }, calculateSecondsUntilEndOfDate(date) / 10);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  if (isLoading) return <Loading />;\r\n  console.log(calculateSecondsUntilEndOfDate(date));\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-col items-center justify-center h-screen mx-10 bg-background\">\r\n        <h1 className=\"text-5xl\">\r\n          {months[date.getMonth()]} {date.getDate() + nth(date.getDate())}\r\n        </h1>\r\n        <p>{quote.text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QuoteOfTheDay;\r\n\r\nconst months = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n\r\nfunction calculateSecondsUntilEndOfDate(date) {\r\n  return (\r\n    24 * 60 * 60 -\r\n    date.getHours() * 60 * 60 -\r\n    date.getMinutes() * 60 -\r\n    date.getSeconds()\r\n  );\r\n}\r\n\r\nfunction nth(d) {\r\n  if (d > 3 && d < 21) return \"th\";\r\n  switch (d % 10) {\r\n    case 1:\r\n      return \"st\";\r\n    case 2:\r\n      return \"nd\";\r\n    case 3:\r\n      return \"rd\";\r\n    default:\r\n      return \"th\";\r\n  }\r\n}\r\n","import { capitalCase } from \"change-case\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Gallery from \"../components/Gallery\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nconst Quotes = ({ quotes, isLoading }) => {\r\n  let { topic = \"\", author = \"\" } = useParams(); \r\n  if (isLoading) return <Loading />;\r\n  return (\r\n    <div className=\"pt-20\">\r\n      {\r\n        <Gallery\r\n          quotes={quotes.filter(\r\n            (quote) =>\r\n              quote.topics.includes(capitalCase(topic)) || quote.author.name === capitalCase(author)\r\n          )}\r\n        ></Gallery>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quotes;\r\n","const Footer = () => {\r\n  return (\r\n    <div className=\"flex items-center justify-center h-16\">\r\n      <p>Copyright © 2021 AniQuotes All rights reserved.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Dropdown = ({ isOpen, toggle }) => {\r\n  return (\r\n    <div\r\n      className={\r\n        isOpen\r\n          ? \"font-semibold grid grid-rows-4 text-center items-center bg-foreground\"\r\n          : \"hidden\"\r\n      }\r\n      onClick={toggle}\r\n    >\r\n      <Link to=\"/\" className=\"p-4\">\r\n        Home\r\n      </Link>\r\n      <Link to=\"/authors\" className=\"p-4\">\r\n        Authors\r\n      </Link>\r\n      <Link to=\"/topics\" className=\"p-4\">\r\n        Topics\r\n      </Link>\r\n      <Link to=\"/quote_of_the_day\" className=\"p-4\">\r\n        Quote Of the Day\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import dragonAndTiger from \"../images/quotes/dragon-and-tiger.png\";\r\nconst authorIds = {\r\n  496: [{ text: \"People die if they are killed...\", topics: [\"Death\"] }],\r\n  2754: [\r\n    {\r\n      text:\r\n        \"Those who stand at the top determine what's wrong and what's right! This very place is neutral ground! Justice will prevail, you say? But of course it will! Whoever wins this war becomes justice!\",\r\n      topics: [\"Leadership\"],\r\n    },\r\n  ],\r\n  12064: [\r\n    {\r\n      text:\r\n        \"You stupid, idiotic, blockhead, mongrel. Or that’s what I’d normally say.\",\r\n      topics: [\"Love\"],\r\n    },\r\n  ],\r\n  12295: [\r\n    {\r\n      image: dragonAndTiger,\r\n      text:\r\n        \"I'm a dragon, You're a tiger. And for centuries, only dragons and tigers have been considered equals. So it doesn't matter that you're not here with me right now, because I'll transcend space and time so I can always be with you. And my feelings for you will never ever change.\",\r\n      topics: [\"Love\"],\r\n    },\r\n  ],\r\n  12305: [\r\n    {\r\n      text:\r\n        \"I don't want to get so caught up in searching for what I can't see, that I lose sight of what I can.\",\r\n      topics: [\"Future\"],\r\n    },\r\n  ],\r\n  55131: [\r\n    {\r\n      text: \"The best way to tame a mystery is with another mystery.\",\r\n      topics: [\"Motivational\"],\r\n    },\r\n  ],\r\n  55133: [\r\n    { text: \"I find myself hard to understand sometimes\", topics: [\"Life\"] },\r\n  ],\r\n  67065: [\r\n    {\r\n      text:\r\n        \"If wishes could be granted, if desires could be fulfilled, then I wouldn’t wish or desire for anything after all. The things you’re handed on a silver platter are never genuine, and never everlasting. And that is why I’ll always keep searching.\",\r\n      topics: [\"Patience\", \"Motivational\"],\r\n    },\r\n  ],\r\n};\r\n\r\nexport default authorIds;\r\n","export default __webpack_public_path__ + \"static/media/dragon-and-tiger.88bd6402.png\";","import { useState, useEffect } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Home from \"./pages\";\nimport Topics from \"./pages/topics\";\nimport Authors from \"./pages/authors\";\nimport QuoteOfTheDay from \"./pages/quote_of_the_day\";\nimport Quotes from \"./pages/quotes\";\nimport Footer from \"./components/Footer\";\nimport Dropdown from \"./components/Dropdown\";\nimport authorIds from \"./data/authorIds\";\n\nconst url = \"https://graphql.anilist.co\",\n  options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `\n        query ($id_in: [Int]) {\n          Page (page: 1) {\n            pageInfo {\n              total\n              currentPage\n              lastPage\n              hasNextPage\n              perPage\n            }\n            characters (id_in: $id_in) {\n              id\n              image {\n                large\n              }\n              name {\n                full\n              }\n            }\n          }\n        }\n      `,\n      variables: {\n        id_in: Object.keys(authorIds),\n      },\n    }),\n  };\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isOpen, setIsOpen] = useState(false);\n  const [quotes, setQuotes] = useState([]);\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  useEffect(() => {\n    fetch(url, options)\n      .then((res) => res.json())\n      .then((result) => {\n        let newQuotes = [];\n        Object.entries(authorIds).forEach(([id, charQuotes]) => {\n          const character = result.data.Page.characters.find(\n            (character) => character.id === parseInt(id)\n          );\n          charQuotes.map((newQuote) =>\n            newQuotes.push(\n              Object.assign(newQuote, {\n                author: {\n                  image: character.image.large,\n                  name: character.name.full,\n                },\n              })\n            )\n          );\n        });\n        setQuotes(newQuotes);\n        setIsLoading(false);\n      });\n\n    const hideMenu = () => {\n      if (window.innerWidth > 768 && isOpen) {\n        setIsOpen(false);\n        console.log(\"i resized\");\n      }\n    };\n    window.addEventListener(\"resize\", hideMenu);\n    return () => {\n      window.removeEventListener(\"resize\", hideMenu);\n    };\n  }, []);\n\n  return (\n    <HashRouter basename=\"/\">\n      <Navbar toggle={toggle} />\n      <Dropdown isOpen={isOpen} toggle={toggle} />\n\n      <Route\n        path=\"/\"\n        exact\n        component={() => <Home quotes={quotes} isLoading={isLoading} />}\n      />\n      <Route\n        path=\"/authors\"\n        exact\n        component={() => <Authors quotes={quotes} isLoading={isLoading} />}\n      />\n      <Route\n        path=\"/authors/:author\"\n        component={() => <Quotes quotes={quotes} isLoading={isLoading} />}\n      />\n      <Route\n        path=\"/topics\"\n        exact\n        component={() => <Topics quotes={quotes} isLoading={isLoading} />}\n      />\n      <Route\n        path=\"/topics/:topic\"\n        component={() => <Quotes quotes={quotes} isLoading={isLoading} />}\n      />\n      <Route\n        path=\"/quote_of_the_day\"\n        component={() => (\n          <QuoteOfTheDay quotes={quotes} isLoading={isLoading} />\n        )}\n      />\n      <Footer />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}